@typeparam TItem
@inherits _BaseDataGridCell<TItem>
@if ( Column.EditTemplate != null )
{
    @Column.EditTemplate( CellEditContext )
}
else
{
    @if ( Column.Validator != null )
    {
        @if ( Column.ColumnType == DataGridColumnType.Numeric
            || Column.ColumnType == DataGridColumnType.Check
            || Column.ColumnType == DataGridColumnType.Date )
        {
            var type = Column.GetValueType();

            <Validation Validator="Column.Validator" UsePattern="Column.UsePatternForValidation">
                <_DataGridCellEditValidation ValueType="@type" CellEditContext="CellEditContext" Readonly="@Column.Readonly" CellValueChanged="@CellValueChanged" ShowValidationFeedback="@ShowValidationFeedback" />
            </Validation>
        }
        else
        {
            <Validation Validator="Column.Validator" UsePattern="Column.UsePatternForValidation">
                <TextEdit Text="@CellEditContext.CellValue?.ToString()" TextChanged="@(( v ) => CellEditContext.CellValue = v)" ReadOnly="@Column.Readonly">
                    <Feedback>
                        @if ( ShowValidationFeedback )
                        {
                            <ValidationError />
                        }
                    </Feedback>
                </TextEdit>
            </Validation>
        }
    }
    else
    {
        @if ( Column.ColumnType == DataGridColumnType.Numeric
            || Column.ColumnType == DataGridColumnType.Check
            || Column.ColumnType == DataGridColumnType.Date )
        {
            var type = Column.GetValueType();

            <_DataGridCellEdit ValueType="@type" CellEditContext="CellEditContext" Readonly="@Column.Readonly" CellValueChanged="@CellValueChanged" />
        }
        else
        {
            <TextEdit Text="@CellEditContext.CellValue?.ToString()" TextChanged="@(( v ) => CellEditContext.CellValue = v)" ReadOnly="@Column.Readonly" />
        }
    }
}